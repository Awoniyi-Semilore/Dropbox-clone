!function(){try{var e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},n=(new e.Error).stack;n&&(e._sentryDebugIds=e._sentryDebugIds||{},e._sentryDebugIds[n]="48a6a2a7-ee60-3f4c-aba9-77664ec4b661")}catch(e){}}();
define(["exports","./e_warp_warp_page_edison","./e_core_exception"],(function(e,t,r){"use strict";function n(){return(new Date).getTime()}let a=null;const o="UG_DBX_DB",i="UG_STORE";function s(e){return new Promise(((t,r)=>{e.onsuccess=()=>t(e.result),e.onerror=()=>r(e.error)}))}async function l(e){return(await function(){if(!a){const e=indexedDB.open(o);e.onerror=e=>{console.error("There was an issue with initializing DB ",e)},e.onupgradeneeded=()=>e.result.createObjectStore(i),a=s(e)}return a}()).transaction(i,e).objectStore(i)}function d(e){const t=e.transaction;return new Promise(((e,r)=>{t.oncomplete=()=>e(),t.onabort=t.onerror=()=>r(t.error)}))}const c={check:async()=>Boolean(await l("readonly")),get:async e=>{const t=await l("readonly");return await s(t.get(e))},has:async e=>Boolean(await c.get(e)),set:async(e,t,r=0)=>{const n=await l("readwrite");await s(n.put(t,e)),await d(n)},entries:async()=>{const e=await l("readonly"),[t,r]=await Promise.all([s(e.getAllKeys()),s(e.getAll())]),n=[];return t.forEach(((e,t)=>{n.push([e,r[t]])})),n},delete:async e=>{const t=await l("readwrite");await s(t.delete(e)),await d(t)},multiDelete:async e=>{const t=await l("readwrite");await Promise.all(e.map((e=>t.delete(e)))),await d(t)},clear:async()=>{const e=await l("readwrite");await s(e.clear()),await d(e)}};var u;e.Store=void 0,(u=e.Store||(e.Store={})).PDF_EDIT_STORE="pdfEdit",u.PDF_EDIT_UPLOAD_STORE="pdfEditUpload",u.PDF_EDIT_SHARED_STORE="pdfEditShared",u.PDF_CONVERT_STORE="pdfConvert",u.IMG_EDIT_STORE="imgEdit",u.FILE_UPLOAD="fileUpload";const g="data",_="metadata",h="updatedTimeStamp",f="_ugStoreKey",S="ttlSeconds",w=157286400;function E(e){return new Blob([e],{type:"text/plain"}).size}function p(e,t=r.SEVERITY.CRITICAL){console.log(`Ungated IndexedDB Store: ${e}`),r.reportException({err:new Error(e),tags:["ungated_idx_db_lib"],severity:t})}function y(e){const[t,r]=e.split("_");return t}function C(e){if(!(h in e)||!(S in e))return!0;return Number(e[h])+1e3*Number(e[S])<n()}const D={isCompatible:async e=>{const r=await c.check();return r||t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{error:"browser_compatibility",store:e}}),r},init:async(e,r=3600,a=!1)=>{t.UDCL.logStart("ungated_store_init",{tags:{state:"start",store:e}});const o=a?"all":e;await D.cleanupExpiredSessionsForStore(o);const i=function(e){return(e+"_"+t.UUID.v4()+f).toString()}(e),s=c.set(i,function(e,t){const r=n().toString();return{[g]:"EMPTY",[_]:"{}",storeType:e,creationTimeStamp:r.toString(),[h]:r.toString(),fileName:r.toString(),[S]:t.toString()}}(e,r));return s.then((()=>(t.UDCL.logEnd("ungated_store_init",{eventState:"success",tags:{store:e}}),i))).catch((r=>{throw p(`Could not initialize a store in indexedDB. Check browser limits or cookie settings. ${r}`),t.UDCL.logEnd("ungated_store_init",{eventState:"failed",tags:{store:e}}),r}))},setSessionData:async(e,a,o,i=3600)=>{if(0===a.byteLength||E(a)>w){const e="File is empty or size is larger than 150 MB. Exiting processing.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}if(!await c.has(e)||null===o){const e="SetSessionData: Invalid file metadata or session key does not exist or has expired.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}return c.get(e).then((t=>(t[g]=a,t[_]=JSON.stringify(o),t[h]=n().toString(),t[S]=i.toString(),c.set(e,t,i)))).catch((r=>{throw p(`Could not set session data. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"set_session_data"}}),r}))},getSessionData:async e=>{if(!await c.has(e)){const e="GetSessionData: Session key does not exist or has expired.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}return c.get(e).then((t=>{if(!C(t))return t;D.deleteUngatedSession(e)})).catch((r=>{throw p(`Could not retrieve file data. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"get_session_data"}}),r}))},hasUngatedSessionKey:async e=>await c.has(e),saveFileData:async(e,a,o=3600)=>{if(0===a.byteLength||E(a)>w){const e="File is empty or size is larger than 150 MB. Exiting processing.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}if(!await c.has(e)){const e="Invalid file data or session key does not exist or has expired.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}return c.get(e).then(((t={})=>(t[g]=a,t[h]=n().toString(),t[S]=o.toString(),c.set(e,t,o)))).catch((r=>{throw p(`Could not save file data to indexedDB. Check file size or try again. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"save_file_data"}}),r}))},getFileData:async e=>{if(!await c.has(e)){const e="GetFileData: Session key does not exist or has expired.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}return c.get(e).then(((t={})=>{if(!C(t))return g in t?t[g]:void 0;D.deleteUngatedSession(e)})).catch((r=>{throw p(`Could not get file data from indexedDB. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"get_file_data"}}),r}))},getLatestUngatedSessionKeyForStore:async e=>c.entries().then((t=>{let r="",n="0";for(const a of t){const[t,o]=a;if("all"===e||t.startsWith(e)){const e=o[h]||"0";e>=n&&(r=t,n=e)}}return r})).catch((r=>{throw p(`Could not get latest session key for ${e}. It is possible it has already expired. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:e,error:"get_latest_key"}}),r})),saveFileMetadata:async(e,a,o=3600)=>{if(null===a){const e="File metadata is null. Returning";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}if(!await c.has(e)){const e="SaveFileMetadata: Session key does not exist or has expired.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}return c.get(e).then(((t={})=>(t[_]=JSON.stringify(a),t[h]=n().toString(),t[S]=o.toString(),c.set(e,t,o)))).catch((r=>{throw p(`Could not save file metadata to indexedDB. Check keys and values are set to string type for key ${e}. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"save_file_metadata"}}),r}))},getFileMetadata:async e=>{if(!await c.has(e)){const e="getFileMetadata: Session key does not exist or has expired.";throw p(e,r.SEVERITY.NONCRITICAL),new Error(e)}return c.get(e).then(((t={})=>{if(!C(t))return _ in t?JSON.parse(t[_]):{};D.deleteUngatedSession(e)})).catch((r=>{throw p(`Could not retrieve file metadata. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"get_file_metadata"}}),r}))},cleanupOldSessionsForStore:async e=>{const r=c.entries(),n=[];return r.then((t=>{for(const r of t){const[t,a]=r;t.endsWith(f)&&("all"===e||t.startsWith(e))&&n.push(t)}return c.multiDelete(n)})).catch((r=>{throw p(`Could not delete old entries for store ${e}. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:e,error:"cleanup_old_sessions"}}),r}))},cleanupExpiredSessionsForStore:async e=>{const r=c.entries(),n=[];return r.then((t=>{for(const r of t){const[t,a]=r;t.endsWith(f)&&("all"===e||t.startsWith(e))&&C(a)&&n.push(t)}return c.multiDelete(n)})).catch((r=>{throw p(`Could not remove expired entries for store ${e}. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:e,error:"cleanup_expired_sessions"}}),r}))},deleteUngatedSession:async e=>{if(!await c.has(e)){p("DeleteUngatedSession: Session key does not exist or has expired.",r.SEVERITY.NONCRITICAL)}return c.delete(e).then((()=>{})).catch((r=>{p(`Could not retrieve file metadata. ${r}`),t.UDCL.logEvent("ungated_idb_lib_failure",{tags:{store:y(e),error:"delete_session"}})}))}};e.UPLOAD_FILE_SIZE_LIMIT_MB=150,e.ungatedDBStore=D}));
//# sourceMappingURL=c_ungated_idx_db_access_lib.js-vflzwmRvM.map

//# debugId=48a6a2a7-ee60-3f4c-aba9-77664ec4b661